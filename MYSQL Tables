-- Create the database for Blood Bank Management
CREATE DATABASE IF NOT EXISTS blood_bank_system;

-- Switch to the database for use
USE blood_bank_system;

-- Create Users Table
CREATE TABLE IF NOT EXISTS users (
    user_id INT PRIMARY KEY AUTO_INCREMENT,
    username VARCHAR(50) UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL,  -- Store hashed passwords
    email VARCHAR(100) UNIQUE NOT NULL,
    phone_number VARCHAR(15),
    role ENUM('admin', 'donor', 'recipient') DEFAULT 'donor',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Create Blood Banks Table
CREATE TABLE IF NOT EXISTS blood_banks (
    bank_id INT PRIMARY KEY AUTO_INCREMENT,
    bank_name VARCHAR(100) NOT NULL,
    city VARCHAR(50) NOT NULL,
    address VARCHAR(255),
    contact_number VARCHAR(15),
    opening_hours VARCHAR(100),
    website VARCHAR(100),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Create Blood Types Table
CREATE TABLE IF NOT EXISTS blood_types (
    blood_type_id INT PRIMARY KEY AUTO_INCREMENT,
    blood_type VARCHAR(5) NOT NULL  -- Example: A+, B-, O+, AB+
);

-- Create Blood Bank Blood Types Table (Many-to-many relationship)
CREATE TABLE IF NOT EXISTS blood_bank_blood_types (
    bank_id INT,
    blood_type_id INT,
    PRIMARY KEY (bank_id, blood_type_id),
    FOREIGN KEY (bank_id) REFERENCES blood_banks(bank_id) ON DELETE CASCADE,
    FOREIGN KEY (blood_type_id) REFERENCES blood_types(blood_type_id) ON DELETE CASCADE
);

-- Create Blood Donations Table
CREATE TABLE IF NOT EXISTS blood_donations (
    donation_id INT PRIMARY KEY AUTO_INCREMENT,
    user_id INT,
    bank_id INT,
    donation_type ENUM('whole blood', 'plasma', 'platelets') NOT NULL,
    donation_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (bank_id) REFERENCES blood_banks(bank_id)
);
